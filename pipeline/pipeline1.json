{
	"name": "pipeline1",
	"properties": {
		"activities": [
			{
				"name": "Set variable2",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "start_page",
					"value": {
						"value": "@string(add(length(activity('Get Metadata1').output.childItems),1))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "JsonFolder",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			},
			{
				"name": "Get last page - 1 data",
				"description": "if last page value is true set last page variable for until loop to true",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Set variable2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat('https://app.billbee.io/api/v1/products?page=',string(sub(int(string(variables('start_page'))),1)),'&pageSize=250')",
						"type": "Expression"
					},
					"method": "GET",
					"headers": {
						"X-Billbee-Api-Key": "91364585-8561-4573-B322-F6E4F66FCCD4"
					},
					"authentication": {
						"type": "Basic",
						"username": "info@emg-technic.de",
						"password": {
							"type": "AzureKeyVaultSecret",
							"store": {
								"referenceName": "AzureKeyVaultADF4",
								"type": "LinkedServiceReference"
							},
							"secretName": "bilbee-key"
						}
					}
				}
			},
			{
				"name": "If Condition2",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Get last page - 1 data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(int(activity('Get last page - 1 data').output.Paging.Page),2)\n\n",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "last page -1 islastpage true set last_page to False",
							"description": "last page -1 islastpage true then set last_page for until variable to false",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "last_page",
								"value": "false"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "last page -1 islastpage true set last_page to True",
							"description": "last page -1 islastpage true then set last_page for until variable to true",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "last_page",
								"value": "true"
							}
						},
						{
							"name": "Fail1",
							"type": "Fail",
							"dependsOn": [
								{
									"activity": "adf_partial_json_to_csv_copy",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"message": "Last Page -1 was true",
								"errorCode": "1"
							}
						},
						{
							"name": "adf_partial_json_to_csv_copy",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "Copy last page updated data to json again",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Users/ashishdudeja1994@gmail.com/adf_partial_json_to_csv",
								"baseParameters": {
									"last_page_no": {
										"value": "@string(sub(int(string(variables('start_page'))),1))",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureDatabricksADF",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Copy last page updated data to json again",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "last page -1 islastpage true set last_page to True",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"additionalHeaders": {
										"X-Billbee-Api-Key": "91364585-8561-4573-B322-F6E4F66FCCD4"
									},
									"paginationRules": {
										"supportRFC5988": "true"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "RestResource1",
									"type": "DatasetReference",
									"parameters": {
										"queryParam": {
											"value": "@concat('products?page=',string(sub(int(string(variables('start_page'))),1)),'&pageSize=250')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "Json1",
									"type": "DatasetReference",
									"parameters": {
										"fileName": {
											"value": "APIPage@{string(sub(int(string(variables('start_page'))),1))}.json",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Until1",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "If Condition2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@bool(variables('last_page'))",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Web1",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@concat('https://app.billbee.io/api/v1/products?page=',string(variables('start_page')),'&pageSize=250')",
									"type": "Expression"
								},
								"method": "GET",
								"headers": {
									"X-Billbee-Api-Key": "91364585-8561-4573-B322-F6E4F66FCCD4"
								},
								"authentication": {
									"type": "Basic",
									"username": "info@emg-technic.de",
									"password": {
										"type": "AzureKeyVaultSecret",
										"store": {
											"referenceName": "AzureKeyVaultADF4",
											"type": "LinkedServiceReference"
										},
										"secretName": "bilbee-key"
									}
								}
							}
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Web1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(int(activity('Web1').output.Paging.Page),2)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Set variable3",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "Loop Copy Data",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "index_value",
											"value": {
												"value": "@string(add(int(variables('start_page')),1))",
												"type": "Expression"
											}
										}
									},
									{
										"name": "Set variable4",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "Set variable3",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "start_page",
											"value": {
												"value": "@variables('index_value')",
												"type": "Expression"
											}
										}
									},
									{
										"name": "Loop Copy Data",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "RestSource",
												"httpRequestTimeout": "00:01:40",
												"requestInterval": "00.00:00:00.010",
												"requestMethod": "GET",
												"additionalHeaders": {
													"X-Billbee-Api-Key": "91364585-8561-4573-B322-F6E4F66FCCD4"
												},
												"paginationRules": {
													"supportRFC5988": "true"
												}
											},
											"sink": {
												"type": "JsonSink",
												"storeSettings": {
													"type": "AzureBlobStorageWriteSettings"
												},
												"formatSettings": {
													"type": "JsonWriteSettings"
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "RestResource1",
												"type": "DatasetReference",
												"parameters": {
													"queryParam": {
														"value": "@concat('products?page=',string(variables('start_page')),'&pageSize=250')",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "Json1",
												"type": "DatasetReference",
												"parameters": {
													"fileName": {
														"value": "APIPage@{string(variables('start_page'))}.json",
														"type": "Expression"
													}
												}
											}
										]
									}
								],
								"ifTrueActivities": [
									{
										"name": "Set variable1",
										"type": "SetVariable",
										"dependsOn": [
											{
												"activity": "Final Copy Data",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"variableName": "last_page",
											"value": "true"
										}
									},
									{
										"name": "Final Copy Data",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "RestSource",
												"httpRequestTimeout": "00:01:40",
												"requestInterval": "00.00:00:00.010",
												"requestMethod": "GET",
												"additionalHeaders": {
													"X-Billbee-Api-Key": "91364585-8561-4573-B322-F6E4F66FCCD4"
												},
												"paginationRules": {
													"supportRFC5988": "true"
												}
											},
											"sink": {
												"type": "JsonSink",
												"storeSettings": {
													"type": "AzureBlobStorageWriteSettings"
												},
												"formatSettings": {
													"type": "JsonWriteSettings"
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "RestResource1",
												"type": "DatasetReference",
												"parameters": {
													"queryParam": {
														"value": "@concat('products?page=',string(variables('start_page')),'&pageSize=250')",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "Json1",
												"type": "DatasetReference",
												"parameters": {
													"fileName": {
														"value": "APIPage@{string(variables('start_page'))}.json",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "adf_json_to_csv",
										"type": "DatabricksNotebook",
										"dependsOn": [
											{
												"activity": "Set variable1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"notebookPath": "/Users/ashishdudeja1994@gmail.com/adf_json_to_csv",
											"baseParameters": {
												"start_page_no": {
													"value": "@string(add(length(activity('Get Metadata1').output.childItems),1))",
													"type": "Expression"
												},
												"last_page_no": {
													"value": "@variables('start_page')",
													"type": "Expression"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "AzureDatabricksADF",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						}
					],
					"timeout": "0.3:00:00"
				}
			}
		],
		"variables": {
			"last_page": {
				"type": "String",
				"defaultValue": "false"
			},
			"start_page": {
				"type": "String",
				"defaultValue": "1"
			},
			"index_value": {
				"type": "String",
				"defaultValue": "0"
			}
		},
		"annotations": [],
		"lastPublishTime": "2021-12-29T11:27:38Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}